<?php
/**
 *Задание 1
Реализовать загрузку нескольких файлов на сервер. На сервере проверять размер и тип файла, файлы, которые прошли проверку, загружать. Если файл не загружен сообщать пользователю имя файла и почему файл не был загружен.
Пишите функции!*/


$files = $_FILES;
$name = $files['picture']['name'];
$tmp_name = $files['picture']['tmp_name'];
move_uploaded_file($tmp_name, "img/$name")
/*if(!file_exists($files['picture']['tmp_name']) || !is_uploaded_file($files['picture']['tmp_name'])) echo 'Файл не был загружен';*/


?>

<form enctype="multipart/form-data" action="" method="post">
    <input name="picture[]" type="file" accept="image/*">
    <input name="picture[]" type="file" accept="image/*">
    <input name="picture[]" type="file" accept="image/*">
    <input name="picture[]" type="file" accept="image/*">
    <input type="submit" value="Send">

</form>
<?php

/**
Задание 2
Простая система аутентификации по логин/паролю.
Для хранения информации о пользователе использовать CSV файл.
Пример записи:
username;password;sess_id
username;password;sess_id
username;password;sess_id

Имя пользователя должно быть уникальными. */



/**
1)Сверстать HTML-форму для регистрации нового пользователя.
2)Написать обработчик регистрационной формы:
операция добавить нового пользователя в файл.
Логин пользователя должен быть уникальным
(реализовать функцию поиска совпадений по имени пользователя).
3)Сверстать HTML-форму входа пользователя на сайт.
4)Написать обработчик формы входа,
который будет проверять существование пользователя в файле,
сверять введенный хеш пароля и хеш из файла на равенство.
Посмотрите функции password_hash() и password_verify()
5)Создать закрытую страницу сайта, которая будет доступна только тем пользователям,
которые прошли регистрацию и выполнили вход на сайт.
Посмотрите функцию header("Location: адрес");
6) Реализовать возможность разлогиниться
 */